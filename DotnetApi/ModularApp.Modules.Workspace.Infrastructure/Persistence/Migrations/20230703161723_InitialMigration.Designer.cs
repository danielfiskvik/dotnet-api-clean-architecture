// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModularApp.Modules.Workspace.Infrastructure.Persistence;

#nullable disable

namespace ModularApp.Modules.Workspace.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230703161723_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Characters")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("CreatedByEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonPosition")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MeaningHint")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("MeaningMnemonic")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedByEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReadingHint")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ReadingMnemonic")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.ContextSentence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<Guid>("CharacterId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId1");

                    b.ToTable("ContextSentences");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.Meaning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<Guid>("CharacterId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WordType")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId1");

                    b.ToTable("Meanings");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.Reading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<Guid>("CharacterId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId1");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.ContextSentence", b =>
                {
                    b.HasOne("ModularApp.Modules.Workspace.Domain.Entities.Character", "Character")
                        .WithMany("ContextSentences")
                        .HasForeignKey("CharacterId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.Meaning", b =>
                {
                    b.HasOne("ModularApp.Modules.Workspace.Domain.Entities.Character", "Character")
                        .WithMany("Meanings")
                        .HasForeignKey("CharacterId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.Reading", b =>
                {
                    b.HasOne("ModularApp.Modules.Workspace.Domain.Entities.Character", "Character")
                        .WithMany("Readings")
                        .HasForeignKey("CharacterId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ModularApp.Modules.Workspace.Domain.Entities.Character", b =>
                {
                    b.Navigation("ContextSentences");

                    b.Navigation("Meanings");

                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
